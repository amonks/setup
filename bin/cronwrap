#!/usr/bin/env bash

logs_dir="$1"
shift
snitch="$1"
shift
script="$1"
shift
args=$@

if test -z "$logs_dir"; then
	echo "Logs dir not provided"
	exit 1
fi

if test -z "$snitch" ; then
	echo "Snitch not provided"
	exit 1
fi

if test -z "$script" ; then
	echo "Script not provided"
	curl -d s=1 "https://nosnch.in/$snitch" &>/dev/null
	exit 1
fi



logs_file="$logs_dir/$(basename "$script").log"
touch $logs_file

date                                                       | tee -a "$logs_file"
echo "$script" $args                                       | tee -a "$logs_file"

$script $args 2>&1                                         | tee -a "$logs_file"
exit_code="${PIPESTATUS[0]}"

echo ""                                                    | tee -a "$logs_file"
echo "exit: $exit_code"                                    | tee -a "$logs_file"
echo "completed at $(date)"                                | tee -a "$logs_file"

curl_exit_code=-1
for i in 1 2 4 8 16 32 ; do
	curl -d "s=$exit_code" "https://nosnch.in/$snitch" | tee -a "$logs_file"
	curl_exit_code="${PIPESTATUS[0]}"
	if test $curl_exit_code -eq 0 ; then
		break
	fi
	echo "reporting failed; sleeping $i seconds"       | tee -a "$logs_file"
	sleep $i
done

if test $curl_exit_code -ne 0 ; then
	echo "reporting failed, even with backoff"         | tee -a "$logs_file"
	echo ""                                            | tee -a "$logs_file"
	echo ""                                            | tee -a "$logs_file"
	exit 1
fi

echo "reported at $(date)"                                 | tee -a "$logs_file"
echo ""                                                    | tee -a "$logs_file"
echo ""                                                    | tee -a "$logs_file"
