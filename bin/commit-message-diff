#!/usr/bin/env python3

import argparse
import subprocess

parser = argparse.ArgumentParser(description='Compare two branches')

parser.add_argument('from_branch', metavar='FROM')
parser.add_argument('to_branch', metavar='TO')

args = parser.parse_args()

git_hash_sigil = "%h"
git_author_sigil = "%an"
git_tab_sigil = "%x09"
git_summary_sigil = "%s"
git_format = "{}{}{}{}{}".format(
        git_hash_sigil,
        git_tab_sigil,
        git_author_sigil,
        git_tab_sigil,
        git_summary_sigil
)

def get_commits_in_branch(branch_name):
        """
        produce a list of tuples (sha, message) of every commit in a given
        branch (or other git-log-able specifier)
        """
        output = subprocess.check_output("git log --pretty=format:'{}' {}".format(git_format, branch_name), shell=True)
        lines = output.decode("utf-8").split("\n")
        out = []
        for line in lines:
                if len(line) <= 1: break
                [sha, author, message] = line.split("	", 2)
                out.append((sha, author, message))
        out.reverse()
        return out


commit_messages_in_from_branch = set()
commit_messages_in_to_branch = set()

commits_in_from_branch = []
commits_in_to_branch = []

commits_only_in_from_branch = []
commits_only_in_to_branch = []

for (sha, author, message) in get_commits_in_branch(args.from_branch):
        commit_messages_in_from_branch.add(message)
        commits_in_from_branch.append((sha, author, message))
for (sha, author, message) in get_commits_in_branch(args.to_branch):
        commit_messages_in_to_branch.add(message)
        commits_in_to_branch.append((sha, author, message))

for (sha, author, message) in commits_in_to_branch:
        if message in commit_messages_in_from_branch: continue
        commits_only_in_to_branch.append((sha, author, message))
for (sha, author, message) in commits_in_from_branch:
        if message in commit_messages_in_to_branch: continue
        commits_only_in_from_branch.append((sha, author, message))


def print_commit(sigil, commit):
        (sha, author, message) = commit
        # output = subprocess.check_output("git show --format=medium --quiet --abbrev-commit {}".format(sha), shell=True)
        # return output.decode("utf-8")
        return '{}	{}	{}	{}\n'.format(sigil, sha, author, message)

out = ""
for commit in commits_only_in_from_branch:
        out += print_commit("-", commit)
for commit in commits_only_in_to_branch:
        out += print_commit("+", commit)

print(out)

